# yamllint disable rule:line-length

---
# Autogenerated template for {{ client.get("name") }}
replicaCount: 1
strategyType: RollingUpdate
enableSelector:
deploymentApiVersion: apps/v1
image:
  repository: registry.gitlab.com/flywheelsoftware/builder-service
  tag: latest
  pullPolicy: IfNotPresent
  secrets:
    - name: gitlab-registry-flywheelsoftware-builder-service
## Persist data to a persitent volume
persistence:
  enabled: false
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  storageClass: {{ client.get("storage_class_name") }}
  accessMode: ReadWriteOnce
  size: 8Gi
podAnnotations: {}
application:
  terminationGracePeriodSeconds: 180
  preStopCommand: ["/bin/sh","-c","sleep 180"]
  track: stable
  tier: web
  project_id: {{ client.get("project_id") }}
  migrateCommand:
  initializeCommand:
  secretName:
  secretChecksum:
hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
gitlab:
  app:
  env:
  envName:
  envURL:
service:
  enabled: true
  serviceMonitor:
    enabled: {{ client.get("enable-service-monitor") }}
  annotations: {}
  name: builder-service
  type: ClusterIP
  url: builder-service.int.{{ client.get("domain_slug") }}.flywheelproducts.com
  url_external: builder-service.pub.{{ client.get("domain_slug") }}.flywheelproducts.com
  commonName:
  externalPort: 80
  internalPort: 8000
ingress:
  enabled: true
  useDNS01Solver: "true"
  tls:
    enabled: true
    secretName: builder-service-web-tls
  tls_external:
    enabled: true
    secretName: builder-service-web-tls-external
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx-internal"
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
  annotations_external:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx-external"
    cert-manager.io/cluster-issuer: "letsencrypt"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
  modSecurity:
    enabled: false
    secRuleEngine: "DetectionOnly"
    # secRules:
    #   - variable: ""
    #     operator: ""
    #     action: ""
prometheus:
  metrics: true
livenessProbe:
  enabled: true
  path: "/"
  initialDelaySeconds: 15
  timeoutSeconds: 15
  scheme: "HTTP"
  probeType: "httpGet"
readinessProbe:
  enabled: true
  path: "/"
  initialDelaySeconds: 5
  timeoutSeconds: 3
  scheme: "HTTP"
  probeType: "httpGet"
postgresql:
  enabled: false
  managed: false
  managedClassSelector:
    #   matchLabels:
    #     stack: gitlab (This is an example. The labels should match the labels on the CloudSQLInstanceClass)

resources:
  limits:
    cpu: 200m
    memory: 500Mi
  requests:
    cpu: 200m
    memory: 500Mi

httpProbeEnabled: "true"
prefixURL: /
probeScheme: HTTP
probePort: "8000"
readinessProbeInitialDelay: 10
readinessProbePeriodSeconds: 10
readinessProbeTimeout: 10
readinessProbeFailureThreshold: 3
readinessProbeSuccessThreshold: 1

## Configure PodDisruptionBudget
## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
#
podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  maxUnavailable: 1

## Configure NetworkPolicy
## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
#
networkPolicy:
  enabled: false
  spec:
    podSelector:
      matchLabels: {}
    ingress:
    - from:
      - podSelector:
          matchLabels: {}
      - namespaceSelector:
          matchLabels:
            app.gitlab.com/managed_by: gitlab
